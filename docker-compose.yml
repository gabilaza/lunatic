version: '0.1'
services:
  db:
    image: postgres:latest
    container_name: lunatic-db
    ports:
     - 5432:5432
    environment:
      POSTGRES_DB: LunaticDB
      POSTGRES_USER: lunatic
      POSTGRES_PASSWORD: lunatic
    networks:
      - db_conn
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lunatic -d LunaticDB"]
      interval: 5s
      timeout: 5s
      retries: 5
  user-db:
    image: postgres:latest
    container_name: lunatic-user-db
    ports:
     - 5433:5432
    environment:
      POSTGRES_DB: LunaticUserDB
      POSTGRES_USER: lunatic
      POSTGRES_PASSWORD: lunatic
    networks:
      - db_conn
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lunatic -d LunaticUserDB"]
      interval: 5s
      timeout: 5s
      retries: 5
  migrator:
    build:
      context: ./lunatic-api
      dockerfile: ./Lunatic.Migrator.Dockerfile
    container_name: lunatic-migrator
    environment:
      ASPNETCORE_ENVIRONMENT: Production
    networks:
      - db_conn
    depends_on:
      db:
        condition: service_healthy
      user-db:
        condition: service_healthy
  api:
    build:
      context: ./lunatic-api
      dockerfile: ./Lunatic.API.Dockerfile
    container_name: lunatic-api
    ports:
      - 8080:8080
    networks:
      - db_conn
      - api_conn
    depends_on:
      db:
        condition: service_healthy
      user-db:
        condition: service_healthy
      migrator:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/test"]
      interval: 5s
      timeout: 5s
      retries: 5
  ui:
    build:
      context: ./lunatic-api
      dockerfile: ./Lunatic.UI.Dockerfile
    container_name: lunatic-ui
    ports:
      - 9090:9090
    networks:
      - api_conn
    depends_on:
      api:
        condition: service_healthy

networks:
  db_conn:
    driver: bridge
  api_conn:
    driver: bridge

