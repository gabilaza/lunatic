@inherits LayoutComponentBase
@using MudBlazor
@inject NavigationManager NavigationManager

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

@*color scheme not yet in place*@
<MudLayout>
	<MudAppBar Color="Color.Dark" Fixed="false" Dense>
		<MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" />
		<MudSpacer />
		<MudBreadcrumbs Items="_items" MaxItems="4" Separator="/"> 
			<SeparatorTemplate>
				<MudIcon Icon="@Icons.Material.Filled.ArrowRight" Size="Size.Small" Color="Color.Secondary" />
			</SeparatorTemplate>
			<ItemTemplate Context="item">
				<MudLink Href="@item.Href" Color="Color.Secondary">
					@item.Text.ToUpper()
				</MudLink>
			</ItemTemplate>
			
		</MudBreadcrumbs>
		<MudSpacer />

		<MudIconButton Icon="@Icons.Material.Filled.Usb" Color="Color.Inherit" />

	</MudAppBar>


		@Body

</MudLayout>

@code {
	private List<BreadcrumbItem> _items = new List<BreadcrumbItem>();
}

@functions{
	protected override void OnParametersSet() {
		_items.Add(new BreadcrumbItem("Home", href: NavigationManager.BaseUri));

		string currentUrl = NavigationManager.Uri;
		var currentPageUrl = currentUrl.Replace(NavigationManager.BaseUri, "");
		
		var path = currentPageUrl.Split('/');

		foreach (var link in path) {
			if (link == "") continue;

			var lastLink = _items.Last();
			_items.Add(new BreadcrumbItem(link, href: $"{lastLink.Href}{link}"));
		}
		base.OnParametersSet();
	}
}
