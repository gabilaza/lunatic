@using Lunatic.UI.Contracts
@using Lunatic.UI.ViewModels
@using MudBlazor
@using System.Reflection
@inject ISnackbar Snackbar
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<MudDialog DefaultFocus="DefaultFocus.FirstChild">
	<DialogContent>
		<div class="d-inline-flex gap-3">
			<MudTextField Label="First Name" @bind-Value="UserModel.FirstName" />
			<MudTextField Label="Last Name" @bind-Value="UserModel.LastName" />
		</div>
		<MudTextField Label="Username" @bind-Value="UserModel.Username" ReadOnly="true"/>
		<MudTextField Label="Email" @bind-Value="UserModel.Email" ReadOnly="true" />
	</DialogContent>
	<DialogActions>
		@* <MudButton Color="Color.Error">Delete account</MudButton> *@
		<MudButton OnClick="Cancel">Cancel</MudButton>
		<MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
	</DialogActions>

</MudDialog>

@code {
	[CascadingParameter] MudDialogInstance MudDialog { get; set; } = null!;
	[Parameter] public UserDto UserModel { get; set; }
	[Inject] NavigationManager NavigationManager { get; set; } = null!;

}

@functions {
	// protected override void OnParametersSet()
	// {

	// 	base.OnParametersSet();
	// }

	private async Task Submit() {
		// foreach (PropertyInfo prop in typeof(UserDto).GetProperties())
		// {
		// 	if (string.IsNullOrWhiteSpace(prop.GetValue(UserModel, null)))
		// 	{
		return;
	}
	private void Cancel() => MudDialog.Cancel();
}