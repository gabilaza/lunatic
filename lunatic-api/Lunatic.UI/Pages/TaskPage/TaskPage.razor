@page "/task/{taskId}"
@using MudBlazor
@using Lunatic.UI.Contracts
@using Lunatic.UI.Models.ViewModels
@using Lunatic.UI.Models.Dtos
@using Lunatic.UI.Models.Shared
@using Markdig
@using System.Text
@using Lunatic.UI.Pages.TaskPage.TaskPageTemplates
@inject ISnackbar Snackbar

<style>
	.task-toolbar {
		background-color: #EFAA57;
		color: #ffffff;
	}

	.background {
		background-color: #e4e6eb;
	}

	.custom-grid {
		display: grid;
		grid-template:
			[row1-start] "description-discussion dashboard" [row1-end]
			/ auto 30em;
		grid-gap: 0.5em;
	}

	.description-discussion-div {
		grid-area: description-discussion;
		display: flex;
		flex-direction: column;
		gap: 0.5em;
		margin-bottom: 10em;
	}

	.description-div, .comments-div {
		grid-area: description-discussion;
	}

	.dashboard-div {
		grid-area: dashboard;
	}

	@@media screen and (max-width: 700px) {
		.custom-grid {
			grid-template:
				[row1-start] "dashboard" [row1-end]
				[row2-start] "description-discussion" [row2-end]
				/ auto;
		}
	}

	.custom-header {
		height: 2em;
	}
</style>

<MudPaper Height="100%" Class="p-2 d-flex flex-column flex-grow-1 " Elevation="0">
	<MudToolBar Class="task-toolbar" Dense="true">
		<MudText Typo="Typo.subtitle1">
			@* switch to breadcrumbs *@
			@CurrentTask.Title
		</MudText>
		<MudSpacer />

		<MudMenu Icon="@Icons.Material.Filled.Settings" Color="Color.Inherit" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter">
			@* <MudMenuItem OnClick="LaunchEditProjectInfoModal">
			Edit project info
			</MudMenuItem>
			@*  if owner
			<MudMenuItem OnClick="LaunchDeleteProjectModal">
			Delete project
			</MudMenuItem> *@
		</MudMenu>


	</MudToolBar>
	<MudPaper Elevation="0" Class="custom-grid mt-1 flex-grow-1">
		<MudPaper Elevation="0" Class=" description-discussion-div">

			<MudPaper Class="description-div">
				<MudToolBar Class="task-toolbar" Dense="true">
					Task Description
				</MudToolBar>
				<MudPaper Class="pt-2 pl-3" Elevation="0">
					@StringToHtml(markdownValue)
				</MudPaper>
				<MudPaper Class="d-flex flex-row align-baseline p-2 pl-3" Elevation="0">
					<MudText Class="mr-1">Tags</MudText>
					@foreach (var tag in CurrentTask.Tags) {
						<MudChip>@tag</MudChip>
					}
				</MudPaper>
			</MudPaper>
			<MudPaper Class="comments-div">
				<MudToolBar Class="task-toolbar" Dense="true">
					<MudText Typo="Typo.subtitle1" Class="mr-3">
						Conversation
					</MudText>

					<MudChip Size="Size.Small">
						@CurrentTask.CommentIds.Count
					</MudChip>
				</MudToolBar>
				<MudPaper Class="d-flex flex-column">

					<MudTimeline TimelineOrientation="TimelineOrientation.Vertical" TimelinePosition="TimelinePosition.Start">
						@foreach (var commentId in CurrentTask.CommentIds) {
							<TaskPageCommentTimelineItem CommentId="commentId" TaskId="TaskId"></TaskPageCommentTimelineItem>
						}
					</MudTimeline>

					<MudDivider DividerType="DividerType.FullWidth" Class=" " Style="height:3px" />

					<MudPaper Class="d-flex flex-row flex-grow-1 mt-2 ml-2" Elevation="0">
						<MudSkeleton SkeletonType="SkeletonType.Circle" Width="45px" Height="45px" />

						<MudPaper Elevation="0" Class="d-flex flex-column flex-grow-1 px-3 pb-2">
							<MudText Typo="Typo.subtitle1"><b>Add a comment</b> </MudText>
							<MudTextField T="string"
										  Class="flex-grow-1"
										  Label="Add a your comment here..."
										  AutoGrow="true"
										  Lines="3"
										  Variant="Variant.Outlined"
										  @bind-Value="NewCommentString" />

							@* <MudTabs Elevation="2"
							Rounded="true"
							ApplyEffectsToContainer="true"
							PanelClass="pa-4"
							ActivePanelIndex="0"
							Outlined="true">

							<MudTabPanel Text="Write">
							<MudTextField T="string"
							Label="Add a your comment here..."
							AutoGrow
							AutoFocus
							Lines="3"
							Variant="Variant.Outlined"
							HelperText="Markdown is supported"
							@bind-Value="NewCommentString" />
							</MudTabPanel>

							<MudTabPanel Text="Preview">
							<MudPaper MinHeight="7em" Class="p-2">
							@StringToHtml(NewCommentString)
							</MudPaper>

							</MudTabPanel>

							</MudTabs> *@

							<MudPaper Class="d-flex flex-row justify-content-end" Elevation="0">
								<MudButton Variant="Variant.Filled" Color="Color.Primary" Class="mt-2" OnClick="AddComment">Comment</MudButton>
							</MudPaper>

						</MudPaper>

					</MudPaper>
				</MudPaper>
			</MudPaper>
		</MudPaper>

		<MudPaper Class="dashboard-div d-flex flex-column" MaxHeight="40em">
			<MudToolBar Class="task-toolbar" Dense="true">
				Task Dashboard
			</MudToolBar>
		</MudPaper>
	</MudPaper>
</MudPaper>


@code {

	[Parameter] public string? TaskId { get; set; }

	public TaskDto CurrentTask { get; set; } = new();

	public string NewCommentString { get; set; } = "";

	// [Inject] public ITaskService TaskService { get; set; } = default!;
}

@functions {
	public MarkupString StringToHtml(string markdown) {
		return new MarkupString(Markdown.ToHtml(markdown));
	}
	string markdownValue = "# Markdown Editor for Blazor\nThis component is using [EasyMDE](https://easy-markdown-editor.tk/) " +
								"to display a nice editor and all functionalities are mapped. See the documentation for more details.\n\n" +
								"Go ahead, play around with the editor! Be sure to check out **bold**, *italic*, " +
								"[links](https://www.puresourcecode.com) and all the other features. " +
								"You can type the Markdown syntax, use the toolbar, or use shortcuts like `ctrl-b` or `cmd-b`.\n\n" +
								"Please check [PureSourceCode.com](https://www.puresourcecode.com) for more updates.\n\n" +
								"## Add code\nMarkdown Editor supports [highlight.js](https://highlightjs.org/) to colorize your code.\n\n" +
								"```code\npublic async Task<string> GetValueAsync() {\n    return false;\n}\n```\n\n" +
								"## Add a mermaid graph\nFrom now on, the Markdown Editor can render mermaid graph. " +
								"See the [documentation](https://mermaid.js.org/intro/).\n\n" +
								"```mermaid\nstateDiagram\n    [*] --> Still\n    Still --> [*]\n\n    Still --> Moving\n    " +
								"Moving --> Still\n    Moving --> Crash\n    Crash --> [*]\n```\n";
	protected override async Task OnInitializedAsync() {
		// if (TaskId != null) {
		CurrentTask = new TaskDto() {
				Title = "task1",
				Description = "taskdesc",
				Tags = new List<string>() { "tag1", "tag2" },
				CommentIds = new List<string>() { "comment1", "comment2" }
			};
		// }
	}

	private async Task AddComment() {
		if (NewCommentString == "") {
			return;
		}
		CurrentTask.CommentIds.Add(NewCommentString);
		NewCommentString = "";
		Snackbar.Add("Comment added", Severity.Success);
	}
}
