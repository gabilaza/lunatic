@page "/login"
@using Lunatic.UI.Auth
@using Lunatic.UI.Models
@using MudBlazor
@inject NavigationManager navigationManager
@inject CustomStateProvider authStateProvider


<MudPaper Elevation="0" Class="d-flex justify-center align-items-center flex-column" Style="height:100vh;">
	<EditForm Model="@model" OnValidSubmit="OnValidSubmit">
		<DataAnnotationsValidator />
		<MudCard Width="fit-content" Class="mx-auto">
			<MudCardContent>
				<MudTextField Label="Username" @bind-Value="model.Username" For="@(() => model.Username)" />
				<MudTextField Label="Password" @bind-Value="model.Password" For="@(() => model.Password)" InputType="InputType.Password" />
			</MudCardContent>
			<MudCardActions>
				<MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="mx-auto">Login</MudButton>
			</MudCardActions>
		</MudCard>

	</EditForm>

	<MudText Typo="Typo.body2">Don't have an account? <MudLink Href="/register">Sign up</MudLink></MudText>

</MudPaper>


@code {
	[Inject] ISnackbar? Snackbar { get; set; }
	LoginModel model = new LoginModel();

	string? error { get; set; }

	async Task OnValidSubmit() {
		error = null;
		try {
			await authStateProvider.Login(model);
			navigationManager.NavigateTo("/");
		}
		catch (Exception e) {
			error = e.Message;
		}
	}
}