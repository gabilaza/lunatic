@page "/teams"
@using MudBlazor
@using Lunatic.UI.Pages.Teams.TeamsPageTemplates
@using Lunatic.UI.Contracts
@using Lunatic.UI.ViewModels
@inject NavigationManager navigationManager
@inject IDialogService DialogService

<div class="d-flex justify-center">
	<h3 class="">Your teams</h3>
	<MudButton @onclick="OpenCreateTeamModal" Variant="Variant.Filled" Color="Color.Primary">
		Create new team
	</MudButton>
</div>

<div class="d-flex justify-center">

	<MudPaper Class="d-flex justify-center flex-wrap flex-grow-1 gap-4" Elevation="0" MaxWidth="90vw">
		@if (UserTeams != null && UserTeams.Any()) {
			@foreach (var teamDto in UserTeams) {
				<TeamsPageTeamCard TeamId="@teamDto.TeamId.ToString()" TeamName="@teamDto.Name" TeamDescription="@teamDto.Description" />
			}
		}
		else {
			<p>No teams available.</p>
		}
	</MudPaper>
</div>

@code {
	private List<TeamDto> UserTeams { get; set; } = null;
	[Inject] private ITeamDataService TeamsService { get; set; } = null!;
	private Guid CurrentUserId { get; set; } = new Guid("63cfdfb0-1da3-421f-881a-e3ea1da43a60");
}

<style>
	.my-custom-class {
		backdrop-filter: blur(10px);
	}
</style>

@functions {

	// protected override async void OnParametersSet() {
	// 	UserTeams = await TeamsService.GetUserTeamsAsync(CurrentUserId);

	// 	base.OnParametersSet();
	// }
	protected override async Task OnInitializedAsync() {
		await LoadUserTeams();
	}

	private async Task LoadUserTeams() {
		UserTeams = await TeamsService.GetUserTeamsAsync(CurrentUserId);
	}
	private void OpenCreateTeamModal() {
		DialogOptions closeOnEscapeKey = new DialogOptions() { CloseOnEscapeKey = true, ClassBackground = "my-custom-class" };
		DialogService.Show<TeamsPageCreateTeamDialog>("Create new team", closeOnEscapeKey);
	}
}
