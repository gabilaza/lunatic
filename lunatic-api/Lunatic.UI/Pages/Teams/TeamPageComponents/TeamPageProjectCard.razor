@using MudBlazor
@using Lunatic.UI.Contracts
@inject NavigationManager navigationManager
@inject ISnackbar Snackbar
<style>
	.mud-card-hover {
		cursor: pointer;
	}
</style>

<MudCard Class="mud-card-hover" @onclick="CardClicked">
	<MudCardContent>
		<MudText>
			@ProjectTitle
		</MudText>
		<MudText Typo="Typo.body2" Color="Color.Surface">
			@ProjectDescription
		</MudText>
	</MudCardContent>
</MudCard>

@code {
	[Parameter] public string CardId { get; set; } = null!;
	[Parameter] public EventCallback<string> OnCardClick { get; set; }
	public string ProjectTitle { get; set; } = "";
	public string ProjectDescription { get; set; } = ""; //inform of max length!

	[Inject] public IProjectDataService ProjectDataService { get; set; } = null!;
}

@functions {
	protected override async Task OnInitializedAsync() {
		var response = await ProjectDataService.GetProjectByIdAsync(CardId);
		if (!response.Success) {
			Snackbar.Add($"Error loading project: {response.Message}", Severity.Error);
			return;
		}
		var project = response.GetValue("project");
		ProjectTitle = project.Title;
		ProjectDescription = project.Description.Substring(0, project.Description.Length > 200 ? 200 : project.Description.Length);

	}

	private async Task CardClicked() {
		await OnCardClick.InvokeAsync(CardId);
	}
}
