@page "/teams/create"
@using MudBlazor

<style>
	.custom-toolbar {
		background-color: #3498db;
		color: #ffffff;
	}
</style>

<MudContainer>
	<MudPaper Elevation="1" Class="m-3">
		<MudToolBar Class="custom-toolbar" Dense="true">
			<MudText>
				Create a New Team
			</MudText>
			<MudSpacer />
			<MudButton Variant="Variant.Filled">Create Team</MudButton>
		</MudToolBar>

		<MudPaper Elevation="0" Class="p-3">
			<MudForm @ref="formRef" @onsubmit="SendCreateTeam">
				<MudTextField Label="Team Name" @bind-Value="teamName" Required="true" />
				<MudTextField Label="Team Description" @bind-Value="teamDescription" Lines="4" />
				<MudDropContainer T="DropItem" Items="_items" ItemsSelector="@((item,dropzone) => item.Identifier == dropzone)" ItemDropped="ItemUpdated" Class="d-flex flex-wrap flex-grow-1">
					<ChildContent>
						<MudDropZone T="DropItem" Identifier="Drop Zone 1" Class="rounded mud-background-gray pa-6 ma-8 flex-grow-1">
							<MudText Typo="Typo.h6" Class="mb-4">Drop Zone 1</MudText>
						</MudDropZone>
						<MudDropZone T="DropItem" Identifier="Drop Zone 2" Class="rounded mud-background-gray pa-6 ma-8 flex-grow-1">
							<MudText Typo="Typo.h6" Class="mb-4">Drop Zone 2</MudText>
						</MudDropZone>
					</ChildContent>
					<ItemRenderer>
						<MudPaper Elevation="25" Class="pa-4 my-4">@context.Name</MudPaper>
						</ItemRenderer>
					</MudDropContainer>

			</MudForm>
		</MudPaper>
	</MudPaper>
</MudContainer>

@code {
	private MudForm formRef;
	private string teamName;
	private string teamDescription;
	private List<string> selectedUsers = new List<string>();
	private List<string> userSuggestions = new List<string> { "User1", "User2", "User3", "User4" };

	private void SendCreateTeam() {
		// Handle the team creation logic here
		// Access the teamName, teamDescription, and selectedUsers variables
		// for further processing (e.g., storing in a database)
	}

	// public void Dispose() {

	// 	Dispose of any resources if needed
	// }
	private void ItemUpdated(MudItemDropInfo<DropItem> dropItem) {
		dropItem.Item.Identifier = dropItem.DropzoneIdentifier;
	}

	private List<DropItem> _items = new()
		{
		new DropItem(){ Name = "Drag me!", Identifier = "Drop Zone 1" },
		new DropItem(){ Name = "Or me!", Identifier = "Drop Zone 2" },
		new DropItem(){ Name = "Just Mud", Identifier = "Drop Zone 1" },
	};

	public class DropItem {
		public string Name { get; init; }
		public string Identifier { get; set; }
	}
}